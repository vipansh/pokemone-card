{"version":3,"sources":["components/Pokecard.js","components/Pokedex.js","components/Pokegame.js","App.js","serviceWorker.js","index.js"],"names":["Pokecard","className","this","props","name","src","imgUrl","alt","base_experiance","pokemonTypes","Component","Pokedex","exp","isWinner","pokemon","map","p","id","defaultProps","Pokegame","hand3","hand1","length","randIdx1","Math","floor","random","randPokemone1","splice","push","randIdx2","randPokemone2","console","log","exp1","reduce","pokemone","exp2","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.08e08fac.chunk.js","sourcesContent":["\r\n\r\nimport React, { Component } from 'react'\r\n\r\nexport default class Pokecard extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"max-w-sm rounded overflow-hidden shadow-lg card-display pokemone-data\">\r\n                <h1>{this.props.name}</h1>\r\n\r\n                <img className=\"object-center m-2 h-32\" src={this.props.imgUrl} alt={this.props.name} />\r\n                <span className=\"px-6 py-4\">\r\n                    Exp: {this.props.base_experiance} <br />\r\nType: {this.props.pokemonTypes}\r\n</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Pokecard from \"./Pokecard\"\r\n\r\nexport default class Pokedex extends Component {\r\n    static defaultProps = {\r\n        pokemon: [\r\n\r\n\r\n            { id: 1, name: \"Bulbasaur\", base_experiance: 64, imgUrl: \"http://img.pokemondb.net/artwork/bulbasaur.jpg\", pokemonTypes: ['Grass', 'Poison'] },\r\n\r\n            { id: 2, name: \"Ivysaur\", base_experiance: 84, imgUrl: \"http://img.pokemondb.net/artwork/ivysaur.jpg\", pokemonTypes: ['Grass', 'Poison'] },\r\n\r\n            { id: 3, name: \"Venusaur\", base_experiance: 91, imgUrl: \"http://img.pokemondb.net/artwork/venusaur.jpg\", pokemonTypes: ['Grass', 'Poison'] },\r\n\r\n            { id: 4, name: \"Charmander\", base_experiance: 40, imgUrl: \"http://img.pokemondb.net/artwork/charmander.jpg\", pokemonTypes: ['Fire'] },\r\n\r\n            { id: 5, name: \"Charmeleon\", base_experiance: 69, imgUrl: \"http://img.pokemondb.net/artwork/charmeleon.jpg\", pokemonTypes: ['Fire'] },\r\n\r\n            { id: 6, name: \"Charizard\", base_experiance: 95, imgUrl: \"http://img.pokemondb.net/artwork/charizard.jpg\", pokemonTypes: ['Fire',\",\", 'Flying'] },\r\n\r\n            { id: 7, name: \"Squirtle\", base_experiance: 69, imgUrl: \"http://img.pokemondb.net/artwork/squirtle.jpg\", pokemonTypes: ['Water'] },\r\n\r\n            { id: 8, name: \"Wartortle\", base_experiance: 84, imgUrl: \"http://img.pokemondb.net/artwork/wartortle.jpg\", pokemonTypes: ['Water'] },\r\n\r\n            { id: 9, name: \"Blastoise\", base_experiance: 94, imgUrl: \"http://img.pokemondb.net/artwork/blastoise.jpg\", pokemonTypes: ['Water'] },\r\n\r\n\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <span className=\"game\">   Total Exp ={this.props.exp} <br />\r\n                    {this.props.isWinner ? \"Winner\" : \"Loser\"}\r\n                </span>\r\n\r\n\r\n                {this.props.pokemon.map((p) => (\r\n                    <Pokecard id={p.id} name={p.name} base_experiance={p.base_experiance} imgUrl={p.imgUrl} pokemonTypes={p.pokemonTypes} />\r\n                )\r\n\r\n                )}\r\n\r\n                {/* <Pokecard name='Charmeleon' imgUrl=\"http://img.pokemondb.net/artwork/squirtle.jpg\" /> */}\r\n            </div>)\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport Pokedex from \"./Pokedex\";\r\n// import \"./App.css\";\r\n\r\nexport default class Pokegame extends Component {\r\n    static defaultProps = {\r\n        pokemon: [\r\n            {\r\n                id: 1,\r\n                name: \"Bulbasaur\",\r\n                base_experiance: 64,\r\n                imgUrl: \"http://img.pokemondb.net/artwork/bulbasaur.jpg\",\r\n                pokemonTypes: [\"Grass\", \",\", \"Poison\"],\r\n            },\r\n\r\n            {\r\n                id: 2,\r\n                name: \"Ivysaur\",\r\n                base_experiance: 84,\r\n                imgUrl: \"http://img.pokemondb.net/artwork/ivysaur.jpg\",\r\n                pokemonTypes: [\"Grass\", \",\", \"Poison\"],\r\n            },\r\n\r\n            {\r\n                id: 3,\r\n                name: \"Venusaur\",\r\n                base_experiance: 91,\r\n                imgUrl: \"http://img.pokemondb.net/artwork/venusaur.jpg\",\r\n                pokemonTypes: [\"Grass\", \",\", \"Poison\"],\r\n            },\r\n\r\n            {\r\n                id: 4,\r\n                name: \"Charmander\",\r\n                base_experiance: 40,\r\n                imgUrl: \"http://img.pokemondb.net/artwork/charmander.jpg\",\r\n                pokemonTypes: [\"Fire\"],\r\n            },\r\n\r\n            {\r\n                id: 5,\r\n                name: \"Charmeleon\",\r\n                base_experiance: 69,\r\n                imgUrl: \"http://img.pokemondb.net/artwork/charmeleon.jpg\",\r\n                pokemonTypes: [\"Fire\"],\r\n            },\r\n\r\n            {\r\n                id: 6,\r\n                name: \"Charizard\",\r\n                base_experiance: 95,\r\n                imgUrl: \"http://img.pokemondb.net/artwork/charizard.jpg\",\r\n                pokemonTypes: [\"Fire\", \",\", \"Flying\"],\r\n            },\r\n\r\n            {\r\n                id: 7,\r\n                name: \"Squirtle\",\r\n                base_experiance: 69,\r\n                imgUrl: \"http://img.pokemondb.net/artwork/squirtle.jpg\",\r\n                pokemonTypes: [\"Water\"],\r\n            },\r\n\r\n            {\r\n                id: 8,\r\n                name: \"Wartortle\",\r\n                base_experiance: 84,\r\n                imgUrl: \"http://img.pokemondb.net/artwork/wartortle.jpg\",\r\n                pokemonTypes: [\"Water\"],\r\n            },\r\n\r\n            {\r\n                id: 9,\r\n                name: \"Blastoise\",\r\n                base_experiance: 94,\r\n                imgUrl: \"http://img.pokemondb.net/artwork/blastoise.jpg\",\r\n                pokemonTypes: [\"Water\"],\r\n            },\r\n        ],\r\n    };\r\n\r\n    render() {\r\n\r\n        let hand3 = [...this.props.pokemon];\r\n\r\n        let hand1 = [];\r\n        while (hand3.length > 5) {\r\n\r\n            let randIdx1 = Math.floor(Math.random() * hand3.length);\r\n\r\n\r\n            let randPokemone1 = hand3.splice(randIdx1, 1)[0];\r\n\r\n\r\n            hand1.push(randPokemone1);\r\n\r\n        }\r\n        let randIdx2 = Math.floor(Math.random() * hand3.length);\r\n        let randPokemone2 = hand3.splice(randIdx2, 1);\r\n        console.log(hand1, randPokemone2)\r\n\r\n\r\n        let exp1 = hand1.reduce((exp, pokemone) => exp + pokemone.base_experiance, 0\r\n\r\n        )\r\n        let exp2 = hand3.reduce((exp, pokemone) => exp + pokemone.base_experiance, 0\r\n\r\n        )\r\n\r\n        console.log(exp1, exp2)\r\n        return (\r\n            <div>\r\n                <Pokedex pokemon={hand3} key={this.props.id} exp={exp1} isWinner={exp1 > exp2} />\r\n                <Pokedex pokemon={hand1} key={this.props.id} exp={exp2} isWinner={exp1 < exp2} />\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n","import React from \"react\";\nimport Pokegame from './components/Pokegame'\nimport \"./App.css\";\n\n// import Greetings from \"./components/Greetings\";\n\nfunction App() {\n  return (\n   \n      <div className=\"App\">Pokemone (Refresh to get diffrent result)\n      \n      <Pokegame />\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import Pokecard from \"./components/Pokecard\"\n// import Pokedex from \"./components/Pokedex\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n\n\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}